const sqlite3 = require('sqlite3').verbose();
const path = require('path');

class Database {
    constructor() {
        this.db = null;
    }

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    connect() {
        return new Promise((resolve, reject) => {
            const dbPath = path.join(__dirname, '../../database.sqlite');
            
            this.db = new sqlite3.Database(dbPath, (err) => {
                if (err) {
                    console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err.message);
                    reject(err);
                } else {
                    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');
                    this.createTables();
                    resolve(this.db);
                }
            });
        });
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    createTables() {
        const createUsersTable = `
            CREATE TABLE IF NOT EXISTS users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                email TEXT UNIQUE NOT NULL,
                password TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        `;

        this.db.run(createUsersTable, (err) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã users:', err.message);
            } else {
                console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
            }
        });
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    getDb() {
        return this.db;
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    close() {
        if (this.db) {
            this.db.close((err) => {
                if (err) {
                    console.error('–û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', err.message);
                } else {
                    console.log('üîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
                }
            });
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const database = new Database();
module.exports = database;
